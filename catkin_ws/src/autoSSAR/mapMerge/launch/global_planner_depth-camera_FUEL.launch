<launch>

    <arg name="world_file_name"    default="simple_environment" />
    <arg name="world_path" default="$(find drone_code)/worlds/$(arg world_file_name).world" />
    <arg name="pointcloud_topics" default="[/camera/depth/points]"/>
    <arg name="start_pos_x" default="0" />
    <arg name="start_pos_y" default="0" />
    <arg name="start_pos_z" default="3" />

    <!-- Define a static transform from a camera internal frame to the fcu for every camera used -->
    <!-- Ros transformation -->
    <node pkg="tf" type="static_transform_publisher" name="tf_depth_camera"
          args="0 0 0 -1.57 0 -1.57 fcu camera_link 10"/>

    <!-- Launch PX4 and mavros
    <include file="$(find drone_code)/launch/avoidance_sitl_mavros.launch" >
        <arg name="model" value="iris_depth_camera" />
        <arg name="world_path" value="$(arg world_path)" />
    </include> -->



    <!-- Launch local planner -->
    <!-- Global planner -->
  <!-- main algorithm params  -->
  <include file="$(find exploration_manager)/launch/algorithm.xml">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>

    <arg name="box_min_x" value="-10.0"/>
    <arg name="box_min_y" value="-15.0"/>
    <arg name="box_min_z" value=" 0.0"/>
    <arg name="box_max_x" value="10.0"/>
    <arg name="box_max_y" value="15.0"/>
    <arg name="box_max_z" value=" 2.0"/>

    <arg name="odometry_topic" value="$(arg odom_topic)"/>
     <!-- sensor pose: transform of camera frame in the world frame  -->
    <arg name="sensor_pose_topic" value="iris_depth_camera"/>
     <!-- depth topic: depth image, 640x480 by default -->
    <!-- cloud topic: point cloud measurement   -->
     <!-- subscribe ONLY TO ONE of the two topics  -->
    <arg name="depth_topic" value="/pcl_render_node/depth"/>
    <arg name="cloud_topic" value="/pcl_render_node/cloud"/>

     <!-- intrinsic params of the depth camera  -->
    <arg name="cx" value="321.04638671875"/>
    <arg name="cy" value="243.44969177246094"/>
    <arg name="fx" value="387.229248046875"/>
    <arg name="fy" value="387.229248046875"/>

    <!-- maximum velocity and acceleration the drone will reach  -->
    <arg name="max_vel" value="2.0" />
    <arg name="max_acc" value="2.0" />
  </include>

    <!-- trajectory server  -->
  <node pkg="plan_manage" name="traj_server" type="traj_server" output="screen">
    <remap from="/position_cmd" to="planning/pos_cmd"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <param name="traj_server/time_forward" value="1.5" type="double"/>
    <param name="traj_server/pub_traj_id" value="4" type="int"/>
    <param name="traj_server/init_x" value="$(arg init_x)" type="double"/>
    <param name="traj_server/init_y" value="$(arg init_y)" type="double"/>
    <param name="traj_server/init_z" value="$(arg init_z)" type="double"/>

    <param name="perception_utils/top_angle" value="0.56125" type="double"/>
    <param name="perception_utils/left_angle" value="0.69222" type="double"/>
    <param name="perception_utils/right_angle" value="0.68901" type="double"/>
    <param name="perception_utils/max_dist" value="4.5" type="double"/>
    <param name="perception_utils/vis_dist" value="1.0" type="double"/>


  <node pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">
    <remap from="~odom" to="$(arg odom_topic)"/>        
    <remap from="~goal" to="/move_base_simple/goal"/>
    <remap from="~traj_start_trigger" to="/traj_start_trigger" />
    <param name="waypoint_type" value="point"/>    
  </node>

    <node pkg="drone_code" type="explore_node" name="explore_node" output="screen">
        <param name="start_pos_x" value="$(arg start_pos_x)" />
        <param name="start_pos_y" value="$(arg start_pos_y)" />
	<param name="ID" value="0" />
	<param name="frame_id" type="string" value="local_origin" />
    </node>

   <!-- use simulator -->
  <include file="$(find exploration_manager)/launch/simulator.xml">
    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>

    <arg name="init_x" value="$(arg init_x)"/>
    <arg name="init_y" value="$(arg init_y)"/>
    <arg name="init_z" value="$(arg init_z)"/>

    <arg name="odometry_topic" value="$(arg odom_topic)" />
    <arg name="c_num" value="0"/>
    <arg name="p_num" value="130"/>
  </include>

    <node pkg="rviz" type="rviz" output="screen" name="rviz" respawn="true"
          args="-d $(find drone_code)/resource/global_planner.rviz" />


<!--
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find drone_code)/resource/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find drone_code)/resource/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find drone_code)/resource/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find drone_code)/resource/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find drone_code)/resource/base_local_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="mavros/setpoint_velocity/cmd_vel" /> 
</node>
-->

</launch>
<!-- 
<launch>
   size of map, change the size in x, y, z according to your application 
  <arg name="map_size_x" value="50.0"/>
  <arg name="map_size_y" value="50.0"/>
  <arg name="map_size_z" value=" 10.0"/>

  <arg name="init_x" value="0"/>
  <arg name="init_y" value="0"/>
  <arg name="init_z" value="1.0"/> 

   topic of your odometry such as VIO or LIO 
  <arg name="odom_topic" value="/state_ukf/odom" />

  main algorithm params 
  <include file="$(find exploration_manager)/launch/algorithm.xml">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>

    <arg name="box_min_x" value="-10.0"/>
    <arg name="box_min_y" value="-15.0"/>
    <arg name="box_min_z" value=" 0.0"/>
    <arg name="box_max_x" value="10.0"/>
    <arg name="box_max_y" value="15.0"/>
    <arg name="box_max_z" value=" 2.0"/>

    <arg name="odometry_topic" value="$(arg odom_topic)"/>
     sensor pose: transform of camera frame in the world frame 
    <arg name="sensor_pose_topic" value="/pcl_render_node/sensor_pose"/>
     depth topic: depth image, 640x480 by default
    cloud topic: point cloud measurement  
     subscribe ONLY TO ONE of the two topics 
    <arg name="depth_topic" value="/pcl_render_node/depth"/>
    <arg name="cloud_topic" value="/pcl_render_node/cloud"/>

     intrinsic params of the depth camera 
    <arg name="cx" value="321.04638671875"/>
    <arg name="cy" value="243.44969177246094"/>
    <arg name="fx" value="387.229248046875"/>
    <arg name="fy" value="387.229248046875"/>

    maximum velocity and acceleration the drone will reach 
    <arg name="max_vel" value="2.0" />
    <arg name="max_acc" value="2.0" />
  </include>

  trajectory server 
  <node pkg="plan_manage" name="traj_server" type="traj_server" output="screen">
    <remap from="/position_cmd" to="planning/pos_cmd"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <param name="traj_server/time_forward" value="1.5" type="double"/>
    <param name="traj_server/pub_traj_id" value="4" type="int"/>
    <param name="traj_server/init_x" value="$(arg init_x)" type="double"/>
    <param name="traj_server/init_y" value="$(arg init_y)" type="double"/>
    <param name="traj_server/init_z" value="$(arg init_z)" type="double"/>

    <param name="perception_utils/top_angle" value="0.56125" type="double"/>
    <param name="perception_utils/left_angle" value="0.69222" type="double"/>
    <param name="perception_utils/right_angle" value="0.68901" type="double"/>
    <param name="perception_utils/max_dist" value="4.5" type="double"/>
    <param name="perception_utils/vis_dist" value="1.0" type="double"/>
    

  </node>

  <node pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">
    <remap from="~odom" to="$(arg odom_topic)"/>        
    <remap from="~goal" to="/move_base_simple/goal"/>
    <remap from="~traj_start_trigger" to="/traj_start_trigger" />
    <param name="waypoint_type" value="point"/>    
  </node>

   use simulator
  <include file="$(find exploration_manager)/launch/simulator.xml">
    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>

    <arg name="init_x" value="$(arg init_x)"/>
    <arg name="init_y" value="$(arg init_y)"/>
    <arg name="init_z" value="$(arg init_z)"/>

    <arg name="odometry_topic" value="$(arg odom_topic)" />
    <arg name="c_num" value="0"/>
    <arg name="p_num" value="130"/>
  </include>

</launch> -->


