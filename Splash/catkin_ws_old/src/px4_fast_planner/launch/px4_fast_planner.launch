<launch>

    <!-- For sim -->
    <arg name="use_gazebo" default="true"/>

    <!-- MAVROS configs -->
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>

    <!-- Planner configs -->
    <!-- Select to use px4_topo_replan or px4_kino_replan -->
    <arg name="use_kino_planner" default="false" />
    <arg name="map_size_x" default="70.0"/>
    <arg name="map_size_y" default="70.0"/>
    <arg name="map_size_z" default="40.0"/>

    <arg name="odom_topic" default="/mavros/local_position/odom" />
    <arg name="camera_pose_topic" default="/camera/pose"/>
    <arg name="depth_topic" default="/camera/depth/image_raw"/>
    <!-- for coordination  -->
    <!-- leader == 0, followers == 1 -->
    <arg name="uav_role_value" default="0"/>

    <arg name="uav_role" default="leader" />
    <arg name="uav_listen_to_1" default="follower_1" />
    <arg name="other_uav_topic" default="/$(arg uav_role)_other/pose_in_world" />

    <!-- Initial drone's position in Gazebo -->
    <!-- <arg name="init_pos_x" default="5.0" />
    <arg name="init_pos_y" default="0.0" /> -->
    <arg name="init_pos_x" default="5.0" />
    <arg name="init_pos_y" default="0.0" />
    <!-- takeoff height -->
    <arg name="takeoff_height" default="1.0" />
        
<!-- 
<group if="$(eval arg('uav_role_value') == 1)">
    <arg name="uav_role" default="follower_1" />
    <arg name="uav_listen_to_1" default="leader" />
    <arg name="other_uav_topic" default="/$(arg uav_role)_other/pose_in_world" />

    <arg name="init_pos_x" default="3.0" />
    <arg name="init_pos_y" default="0.0" />
    <arg name="takeoff_height" default="1.0" />
</group> 
-->




    <arg name="max_vel" default="1.0" />
    <arg name="max_acc" default="2.5" />


    <!-- ROS static transformation -->
    <node pkg="tf" type="static_transform_publisher" name="world_map_linker" args="0 0 0 0 0 0 world map 100" />
    <node pkg="tf" type="static_transform_publisher" name="tf_camera" args="0.1 0 0.0 -1.57 0 -1.57 base_link camera_link 33"/>

    <!-- MAVROS + PX4 + Gazebo -->
    <include file="$(find px4_fast_planner)/launch/mavros.launch" >
        <arg name="use_gazebo" value="$(arg use_gazebo)"/>
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="x" value="$(arg init_pos_x)"/>
        <arg name="y" value="$(arg init_pos_y)"/>
    </include>

    <!-- Fast planner -->
    <include unless="$(arg use_kino_planner)" file="$(find px4_fast_planner)/launch/px4_topo_replan.launch" >
        <arg name="map_size_x" default="$(arg map_size_x)"/>
        <arg name="map_size_y" default="$(arg map_size_y)"/>
        <arg name="map_size_z" default="$(arg map_size_z)"/>

        <arg name="odom_topic" default="$(arg odom_topic)" />
        <arg name="depth_topic" default="$(arg depth_topic)"/>
        <arg name="camera_pose_topic" default="$(arg camera_pose_topic)"/>
        <!-- for coordination  -->
        <arg name="other_uav_topic" default="$(arg other_uav_topic)" />
        
    </include>

    <include if="$(arg use_kino_planner)" file="$(find px4_fast_planner)/launch/px4_kino_replan.launch" >
        <arg name="map_size_x" default="$(arg map_size_x)"/>
        <arg name="map_size_y" default="$(arg map_size_y)"/>
        <arg name="map_size_z" default="$(arg map_size_z)"/>

        <arg name="odom_topic" default="$(arg odom_topic)" />
        <arg name="depth_topic" default="$(arg depth_topic)"/>
        <arg name="camera_pose_topic" default="$(arg camera_pose_topic)"/>
    </include>
    <!--include file="$(find px4_fast_planner)/launch/px4_kino_replan.launch" /-->

    <!-- Geometric controller -->
    <include file="$(find px4_fast_planner)/launch/geometric_controller.launch">
        <arg name="gazebo_simulation" value="$(arg use_gazebo)" />
        <arg name="max_acc" value="$(arg max_acc)" />
        <param name="Kp_x" value="6.0" />
        <param name="Kp_y" value="6.0" />
        <param name="Kp_z" value="10.0" />
        <param name="Kv_x" value="1.5" />
        <param name="Kv_y" value="1.5" />
        <param name="Kv_z" value="3.5" />
        <arg name="init_pos_x" value="0.0" />
        <arg name="init_pos_y" value="0.0" />
        <arg name="init_pos_z" value="$(arg takeoff_height)" />
    </include>

    <!-- Camera pose publisher -->
    <!-- This node publishes tf from parent_frame to child_frame-->
    <node pkg="px4_fast_planner" name="camera_pose_publisher" type="camera_pose_publisher.py" output="screen">
        <param name="parent_frame" value="world" />
        <param name="child_frame" value="camera_link" />
        <param name="pose_topic" value="camera/pose" />
    </node>

    <node pkg="px4_fast_planner" name="traj_msg_converter" type="trajectory_msg_converter.py" output="screen">
        <param name="fast_planner_traj_topic" value="planning/ref_traj"/>
        <param name="traj_pub_topic" value="command/trajectory"/>
        <param name="coord_sub_topic" value="/$(arg uav_role)_other/relay_pose"/>
        <param name="coord_pub_topic" value="/$(arg uav_role)_other/pose_in_world"/>
    </node>

    <!-- simulate multi UAV -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="follwer_link1_broadcaster" args="1 0 0 0 0 0 1 camera_link follower_link" />
    <node pkg="px4_fast_planner" name="follower_pose_publisher" type="camera_pose_publisher.py" output="screen">
        <param name="parent_frame" value="world" />
        <param name="child_frame" value="follower_link" />
        <param name="pose_topic" value="follower/pose" />
    </node> -->

    <!-- publish my pose in the glable world frame to other UAVs -->
    <node pkg="px4_fast_planner" name="$(arg uav_role)_pose" type="camera_pose_publisher.py" output="screen">
        <param name="parent_frame" value="global_world" />
        <param name="child_frame" value="base_link" />
        <param name="pose_topic" value="/$(arg uav_role)/pose" />
    </node>


    <!-- communication for multi-UAV coordination -->
    <!-- publish my pose to others -->
    <node pkg="topic_tools" type="relay" name="relay2_uav_$(arg uav_role)" args="/$(arg uav_role)/pose  /$(arg uav_role)/relay_pose" />
    <!-- listen to other UAV's pose -->
    <node pkg="topic_tools" type="relay" name="relay3_uav_$(arg uav_role)" args="/$(arg uav_listen_to_1)/relay_pose  /$(arg uav_role)_other/relay_pose" />
    <!-- publish my trajectory plan to others-->
    <!-- <node pkg="topic_tools" type="relay" name="relay4_uav_$(arg uav_role)" args="/planning_vis/trajectory  /$(arg uav_role)/relay_trajectory_plan" /> -->
    <node pkg="topic_tools" type="relay" name="relay4_uav_$(arg uav_role)" args="/planning/bspline  /$(arg uav_role)/relay_trajectory_plan" />
    <!-- listen to other UAV's trjectory plan -->
    <node pkg="topic_tools" type="relay" name="relay5_uav_$(arg uav_role)" args="/$(arg uav_listen_to_1)/relay_trajectory_plan  /$(arg uav_role)_other/relay_trajectory_plan" />



    <node name="master_discovery" pkg="fkie_master_discovery" type="master_discovery" output="screen">
    </node>
    <!-- Rviz -->
    <include file="$(find px4_fast_planner)/launch/rviz.launch" />

    <!-- use rvize to define the team waypoint  -->

    <group if="$(eval arg('uav_role_value') ==0)">
        <!-- relay for the leader publish node -->
        <node pkg="topic_tools" type="relay" name="$(arg uav_role)_team_waypoint_pub" args="/waypoint_generator/leader_waypoints  /$(arg uav_role)/leader_waypoints" />

        <!-- set glable world frame as the leader's local world frame -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg uav_role)_world_broadcaster" args="0 0 0 0 0 0 1 world global_world" />

        <node name="master_sync" pkg="fkie_master_sync" type="master_sync" output="screen">
            <rosparam param="do_not_sync"> ['/tf','/mavros','/global_world'] </rosparam>
            <rosparam param="ignore_nodes"> [/rosout, "/*master_sync* node", "remote /*master_discovery* node", "/*node_manager", /*zeroconf,
            '/tf','/leader_world_broadcaster', '/fast_planner_node','/rvizvisualisation',
            '/traj_server','/world_map_linker','/tf_camera','/mavros','/gazebo','/geometric_controller','/camera_pose_publisher', 
            '/waypoint_generator'] </rosparam>        
            <rosparam param="sync_topics"> ['/follower_1/relay_pose','/follower_1/relay_trajectory_plan','/follower_1/team_ack'] </rosparam>
            <rosparam param="ignore_topics"> ['/rosout', '/rosout_agg', '/tf'] </rosparam>
        </node>
    </group>

    <group if="$(eval arg('uav_role_value') ==1)">
        <!-- relay for the follower ack publish node -->
        <node pkg="topic_tools" type="relay" name="$(arg uav_role)_team_ack_pub" args="/waypoint_generator/team_ack  /$(arg uav_role)/team_ack" />


        <!-- set glable world frame as the leader's local world frame -->
        <node pkg="tf2_ros" type="static_transform_publisher" name="$(env D4X_ROLE)_world_broadcaster" args="2 0 0 0 0 0 1 world global_world" />

        <node name="master_sync" pkg="fkie_master_sync" type="master_sync" output="screen">
            <rosparam param="do_not_sync"> ['/tf','/mavros', '/global_world'] </rosparam>
            <rosparam param="ignore_nodes"> [/rosout, "/*master_sync* node", "remote /*master_discovery* node", "/*node_manager", /*zeroconf,
            '/tf','/follower_1_world_broadcaster','/fast_planner_node','/rvizvisualisation','/traj_server',
            '/world_map_linker','/tf_camera','/mavros','/gazebo','/geometric_controller','/camera_pose_publisher', '/waypoint_generator'] </rosparam>
            <!-- <rosparam param="sync_topics"> ['/leader/relay_pose', '/leader/relay_trajectory_plan','/team_move_base_simple/goal'] </rosparam> -->
            <rosparam param="sync_topics"> ['/leader/relay_pose', '/leader/relay_trajectory_plan', '/leader/leader_waypoints' ] </rosparam>
            <rosparam param="ignore_topics"> ['/rosout', '/rosout_agg', '/tf'] </rosparam>
        </node>
    </group>

</launch>